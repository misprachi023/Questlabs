import React from "react";
import { Box, VStack, Text, Image, Heading } from "@chakra-ui/react";
import { motion } from "framer-motion";

const MotionBox = motion(Box);

const CircleAnimation = () => {
  const icons = [
    "data:image/svg+xml,%3csvg%20width='256'%20height='255'%20viewBox='0%200%20256%20255'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cg%20clip-path='url(%23clip0_5060_29781)'%3e%3cpath%20d='M100.212%20161.19C108.362%20161.769%20114.819%20168.444%20114.988%20176.632L114.991%20176.96V239.055C114.991%20247.806%20107.825%20254.897%2099.026%20254.897C90.291%20254.897%2083.213%20247.977%2083.044%20239.371L83.041%20239.055V204.32L52.633%20221.703C45.008%20226.1%2035.257%20223.498%2030.83%20215.94C26.48%20208.46%2028.964%20198.9%2036.371%20194.445L36.666%20194.272L90.941%20163.257C93.7467%20161.636%2096.9833%20160.914%20100.212%20161.19ZM164.663%20163.044L165.045%20163.257L219.309%20194.272C226.956%20198.648%20229.55%20208.362%20225.155%20215.94C220.807%20223.4%20211.24%20226.032%20203.652%20221.871L203.353%20221.703L172.966%20204.32V239.055C172.966%20247.806%20165.822%20254.897%20156.98%20254.897C148.245%20254.897%20141.186%20247.977%20141.017%20239.371L141.014%20239.055V176.96C141.014%20168.623%20147.516%20161.776%20155.794%20161.19C158.764%20160.938%20161.85%20161.52%20164.664%20163.044M23.671%2082.509L23.971%2082.676L78.205%20113.711C82.018%20115.89%2084.563%20119.346%2085.637%20123.215C85.994%20124.461%2086.157%20125.705%2086.22%20126.952C86.26%20128.672%2086.035%20130.416%2085.493%20132.107C84.3464%20135.799%2081.881%20138.94%2078.567%20140.931L78.205%20141.144L23.971%20172.2C16.315%20176.567%206.55402%20173.983%202.16102%20166.427C-2.20998%20158.927%200.275021%20149.414%207.70502%20144.952L7.99702%20144.782L38.303%20127.459L7.99702%20110.089C0.340021%20105.708%20-2.27598%2096.047%202.16002%2088.481C6.49702%2081.003%2016.062%2078.377%2023.671%2082.509ZM253.848%2088.481C258.273%2096.046%20255.656%20105.708%20248.002%20110.086L217.694%20127.456L248.002%20144.779C255.656%20149.165%20258.272%20158.829%20253.848%20166.425C249.431%20173.981%20239.662%20176.565%20232.035%20172.198L177.76%20141.143C174.141%20139.056%20171.628%20135.783%20170.513%20132.106C169.984%20130.441%20169.742%20128.697%20169.797%20126.951C169.829%20125.687%20170.018%20124.432%20170.359%20123.214C171.485%20119.199%20174.143%20115.786%20177.76%20113.71L232.035%2082.675C239.662%2078.308%20249.431%2080.905%20253.848%2088.481ZM131.306%2097.84C132.225%2097.84%20133.492%2098.356%20134.137%2099.014L156.695%20121.34C157.338%20121.978%20157.86%20123.244%20157.86%20124.157V130.74C157.86%20131.632%20157.338%20132.897%20156.695%20133.526L134.137%20155.853C133.492%20156.509%20132.245%20157.046%20131.306%20157.046H124.672C123.761%20157.046%20122.494%20156.509%20121.839%20155.853L99.293%20133.526C98.647%20132.897%2098.126%20131.632%2098.126%20130.74V124.157C98.126%20123.244%2098.647%20121.977%2099.293%20121.34L121.839%2099.014C122.494%2098.356%20123.761%2097.84%20124.672%2097.84H131.306ZM128.114%20116.894H127.861C126.951%20116.894%20125.684%20117.422%20125.05%20118.058L118.518%20124.502C117.863%20125.169%20117.362%20126.426%20117.362%20127.328V127.58C117.362%20128.471%20117.863%20129.717%20118.518%20130.366L125.05%20136.828C125.693%20137.466%20126.95%20137.992%20127.86%20137.992H128.114C129.026%20137.992%20130.294%20137.466%20130.938%20136.828L137.469%20130.366C138.113%20129.717%20138.664%20128.471%20138.664%20127.58V127.328C138.664%20126.426%20138.113%20125.168%20137.469%20124.502L130.938%20118.058C130.294%20117.422%20129.026%20116.894%20128.114%20116.894ZM156.98%200C165.715%200%20172.793%206.923%20172.963%2015.505L172.966%2015.82V50.566L203.353%2033.162C210.989%2028.788%20220.75%2031.382%20225.155%2038.946C227.241%2042.5362%20227.828%2046.8038%20226.789%2050.8239C225.75%2054.8441%20223.169%2058.2929%20219.605%2060.423L219.309%2060.596L165.045%2091.64C162.24%2093.2463%20159.015%2093.9662%20155.793%2093.705C147.625%2093.108%20141.185%2086.422%20141.017%2078.243L141.014%2077.915V15.82C141.015%207.092%20148.14%200%20156.98%200ZM99.026%200C107.719%200%20114.818%206.923%20114.988%2015.505L114.991%2015.82V77.915C114.991%2086.242%20108.471%2093.1%20100.211%2093.705C97.1317%2093.9553%2094.0455%2093.3116%2091.323%2091.851L90.941%2091.64L36.666%2060.596C29.03%2056.218%2026.423%2046.545%2030.83%2038.946C35.2%2031.481%2044.756%2028.856%2052.335%2032.996L52.633%2033.162L83.041%2050.566V15.82C83.041%207.092%2090.185%200%2099.026%200Z'%20fill='%2329B5E8'/%3e%3c/g%3e%3cdefs%3e%3cclipPath%20id='clip0_5060_29781'%3e%3crect%20width='256'%20height='255'%20fill='white'/%3e%3c/clipPath%3e%3c/defs%3e%3c/svg%3e",
    "data:image/svg+xml,%3csvg%20width='57'%20height='56'%20viewBox='0%200%2057%2056'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cg%20id='icon'%3e%3crect%20x='0.5'%20width='56'%20height='56'%20rx='28'%20fill='%23161616'/%3e%3crect%20x='1.5'%20y='1'%20width='54'%20height='54'%20rx='27'%20stroke='white'%20stroke-opacity='0.1'%20stroke-width='2'/%3e%3cpath%20id='Vector'%20d='M26.9117%2022.3379V40H12.5L26.9117%2022.3379ZM26.9117%2016C26.9117%2020.0383%2023.6843%2023.3142%2019.7059%2023.3142C15.7274%2023.3142%2012.5%2020.0384%2012.5%2016H26.9117ZM29.2883%2040C29.2883%2035.9576%2032.5118%2032.6858%2036.4941%2032.6858C40.4767%2032.6858%2043.7%2035.9616%2043.7%2040H29.2883ZM29.2883%2033.658V16H43.7L29.2883%2033.658Z'%20fill='white'/%3e%3c/g%3e%3c/svg%3e",
    "https://www.questlabs.ai/assets/snowflack-X_nYrDCM.svg",
    "https://www.questlabs.ai/assets/asicon18-r35Zo0Zo.svg",
    "https://www.questlabs.ai/assets/stack-MxdB7c0M.svg",
    "https://www.questlabs.ai/assets/asicon14-JYAfCffi.svg",
    "https://www.questlabs.ai/assets/asicon17-FILrB608.svg",
    "https://www.questlabs.ai/assets/asicon16-rJRaYGBx.svg",
    "https://www.questlabs.ai/assets/asicon7-CC6xdVKU.svg",
    "https://www.questlabs.ai/assets/AMPL-MScmEe7Q.svg",
    "https://www.questlabs.ai/assets/firebase-gDRaRdGY.svg",
    "https://www.questlabs.ai/assets/asicon12-t3VxX6RD.svg",
    "https://www.questlabs.ai/assets/segmentIcon-18JVZ7QZ.svg",
    "https://www.questlabs.ai/assets/bitazza-kEZ2cS7b.svg",
  ];

  const radius = 185;

  return (
    <Box
      bg="black"
      color="white"
      minH="100vh"
      display="flex"
      justifyContent="center"
      alignItems="center"
      position="relative"
    >
      <VStack spacing={17} align="center" m={10}>
        <Heading fontSize={{ base: "xl", md: "3xl" }} textAlign="center">
          Connects to your <br /> Existing Data Sources
        </Heading>
        <Text fontSize="md" color={"gray.500"} textAlign="center">
          Product usage data is collected from <br /> your existing Product &
          Data stack.
        </Text>
      </VStack>
      <MotionBox
        position="absolute"
        p={20}
        top="50%"
        left="50%"
        width="300px"
        height="300px"
        marginLeft="-150px"
        marginTop="-150px"
        borderRadius="full"
        display="flex"
        justifyContent="center"
        alignItems="center"
        animate={{ rotate: 360 }}
        transition={{ duration: 60, repeat: Infinity, ease: "linear" }}
      >
        {icons.map((icon, index) => {
          const angle = (index / icons.length) * 2 * Math.PI;
          const x = radius * Math.cos(angle);
          const y = radius * Math.sin(angle);
          return (
            <Box
              key={index}
              position="absolute"
              left={`calc(50% + ${x}px)`}
              top={`calc(50% + ${y}px)`}
              transform="translate(-50%, -50%)"
            >
              <Image src={icon} p={2} boxSize="35px" />
            </Box>
          );
        })}
      </MotionBox>
    </Box>
  );
};

export default CircleAnimation;
